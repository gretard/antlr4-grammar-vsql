ALTER TABLE t01 ADD CONSTRAINT sampleconstraint PRIMARY KEY(id);

ALTER ACCESS POLICY ON public.customer_dimension FOR COLUMN customer_address;

ALTER AUTHENTICATION Ldap1 SET host='ldap://172.16.65.177',
   binddn_prefix='cn=', binddn_suffix=',dc=qa_domain,dc=com';         
ALTER AUTHENTICATION localpwd METHOD 'trust';

ALTER AUTHENTICATION ident1 SET system_users='user1';

ALTER ACCESS POLICY ON customer FOR ROWS WHERE cid1>1 ENABLE;

ALTER ACCESS POLICY ON customer FOR COLUMN test COPY TO TABLE test;

ALTER FAULT GROUP parent0 RENAME TO parent100;

ALTER FUNCTION SQL_one (int,int) RENAME TO SQL_two;

ALTER FUNCTION SQL_two (int, int) SET SCHEMA macros;

ALTER FUNCTION SQL_one (int, int) RENAME TO SQL_two;

ALTER FUNCTION UDF_two (int, int) SET FENCED false;

ALTER HCATALOG SCHEMA hcat SET HOSTNAME='test';

ALTER LIBRARY myFunctions AS '/home/dbadmin/my_new_functions.so';

ALTER MODEL db.tschema.test OWNER TO testOwner;

ALTER NETWORK INTERFACE myNetwork RENAME TO myNewNetwork;

ALTER NODE v_vmart_node0001 EXPORT ON DEFAULT;

ALTER PROJECTION tbl_p RENAME to new_tbl_p;

ALTER PROFILE DEFAULT LIMIT PASSWORD_MIN_SYMBOLS 'asdsd';

ALTER PROFILE sample_profile RENAME TO new_sample_profile;


 ALTER SCHEMA ms OWNER TO dbadmin CASCADE;
 
 
 
 ALTER SCHEMA S1, S2, temps RENAME TO temps, S1, S2;
 
 ALTER SCHEMA s1 DEFAULT INCLUDE SCHEMA PRIVILEGES;
 
 ALTER SEQUENCE my_sequence RESTART WITH 50;
 
 ALTER SESSION CLEAR ForceUDxFencedMode;
 
 ALTER SESSION SET ForceUDxFencedMode = 1;
 
 ALTER SESSION SET UDPARAMETER FOR MyLibrary RowCount = 25;
 
 ALTER SESSION CLEAR UDPARAMETER FOR MyLibrary RowCount;
 
 ALTER SESSION CLEAR UDPARAMETER FOR MyLibrary sss;
 
 ALTER SUBNET mysubnet RENAME TO myNewSubnet;
 
 ALTER TABLE mytable RENAME TO mytable2;
 
 
 BEGIN TRANSACTION ISOLATION LEVEL READ COMMITTED READ WRITE;
 
 COMMENT ON COLUMN customer_dimension_vmart_node01.customer_name IS NULL;
 
 SHOW CURRENT ALL;
 
 SHOW ALL;
 
 SHOW DATABASE DEFAULT ALL;
 
 SHOW NODE v_vmart_node0001 ALL;
 
 SHOW SESSION UDPARAMETERS ALL;
 
 START TRANSACTION ISOLATION LEVEL READ COMMITTED READ WRITE;
 
 SET SESSION TEMPSPACECAP NONE;
 
 SET SESSION RESOURCE_POOL = ceo_pool;
 
 SET SESSION MULTIPLEACTIVERESULTSETS TO on;
 
 SET SESSION MEMORYCAP '2G';
 
 SET ROLE all;
 
 
  SELECT a,b,COUNT(*), GROUPING_ID() FROM T GROUP BY ROLLUP(a,b);
SELECT product_description, product_cost, WIDTH_BUCKET(product_cost, 100, 700, 3);
 SELECT ADVANCE_EPOCH(1);
 SELECT ALTER_LOCATION_USE ('/thirdVerticaStorageLocation/' , '' , 'DATA');
 SELECT CHANGE_RUNTIME_PRIORITY(45035996273705748, NULL, 'low');
 SELECT CLEAR_PROFILING('query');
 SELECT close_user_sessions('u1');
 SELECT DESIGNER_DESIGN_PROJECTION_ENCODINGS ('mydb.private.*','encodings.sql');
 SELECT DESIGNER_DROP_DESIGN ('VMART_DESIGN');
 SELECT DESIGNER_RESET_DESIGN ('VMART_DESIGN');
 SELECT DESIGNER_SET_DESIGN_KSAFETY('VMART_DESIGN', 1);
 SELECT DESIGNER_SET_PROPOSE_UNSEGMENTED_PROJECTIONS('VMART_DESIGN', false);
 SELECT DESIGNER_WAIT_FOR_DESIGN ('VMART_DESIGN');
 SELECT DROP_LOCATION('/data', 'v_vmart_node0003');
 SELECT DUMP_CATALOG();
 SELECT DUMP_LOCKTABLE();
 SELECT ENFORCE_OBJECT_STORAGE_POLICY ('test');
 SELECT SYNC_CATALOG();
 SELECT EXTERNAL_CONFIG_CHECK('nameservice=ns1');
 SELECT HAS_ROLE('commentor');
 SELECT ldap_link_sync_start();
 SELECT DROP_LICENSE('9b2d81e2-aab1-4cfb-bc07-fa9a696e8f5e');
 SELECT INSTALL_LICENSE('/tmp/vlicense.dat');
 SELECT MOVE_STATEMENT_TO_RESOURCE_POOL ('v_vmart_node0001.example.-31427:0x82fbm', 45035996273711993, 1, 'my_target_pool');
 SELECT NOTIFY('ETL Done!', 'my_notifier', 'DB_activity_topic');
 SELECT REALIGN_CONTROL_NODES;
SELECT REFRESH_COLUMNS ('t1, t2', 't1.a, t2.b', 'REBUILD');
 SELECT RESTORE_LOCATION ('/thirdVerticaStorageLocation/' , 'v_vmartdb_node0004');
 SELECT RETIRE_LOCATION ('/data' , 'v_vmartdb_node0004');
 SELECT SET_LOCATION_PERFORMANCE('/secondVerticaStorageLocation/','node2','122','140');

 SELECT x, y WHERE x <> 0 AND y/x > 1.5;
SELECT /*+ SYNTACTIC_JOIN*/ * FROM x JOIN /*+JTYPE(FM)*/ y ON x.c1 = y.c1;
CREATE SEQUENCE "my sequence!";
 SELECT my_node AS SOURCE FROM nodes;
 CREATE TABLE int_test(i INTERVAL YEAR TO MONTH);
ALTER SESSION SET EnableStrictTimeCasts=1;
 ALTER ACCESS POLICY ON customer_dimension FOR COLUMN customer_key length('xxxxx') enable;
 ALTER HCATALOG SCHEMA hcat SET HOSTNAME='thrift://ms1.example.com:9083,thrift://ms2.example.com:9083';
 ALTER NETWORK INTERFACE myNetwork RENAME TO myNewNetwork;
 ALTER NODE v_vmart_node0001 EXPORT ON DEFAULT;
ALTER PROFILE DEFAULT LIMIT PASSWORD_MIN_SYMBOLS 1;
ALTER PROFILE sample_profile RENAME TO new_sample_profile;
 ALTER RESOURCE POOL ceo_pool PRIORITY 5;
 ALTER SESSION SET UDPARAMETER FOR securelib username='alice';
 ALTER SUBNET mysubnet RENAME TO myNewSubnet;
 COMMENT ON NODE initiator IS 'Initiator node';
 COMMENT ON SCHEMA public  IS 'All users can access this schema';
 COPY t FROM 's3://AWS_DataLake/sales.parquet' ORC;
 COPY t FROM 's3://AWS_DataLake/sales.parquet' PARQUET;
 CREATE HCATALOG SCHEMA hcat;
 CREATE NETWORK INTERFACE mynetwork ON v_vmart_node0001 WITH '123.4.5.6';
 CREATE PROFILE sample_profile LIMIT PASSWORD_MAX_LENGTH 20;
 CREATE SCHEMA s1;
 CREATE SUBNET mySubnet WITH '123.4.5.6';
 CREATE TRANSFORM FUNCTION transFunct AS LANGUAGE 'C++' NAME 'myFactory' LIBRARY myFunction;
 DROP AUTHENTICATION md5_auth;
 DROP NETWORK INTERFACE myNetwork;
 DROP PROFILE sample_profile;
 DROP SCHEMA S1;
 DROP SUBNET mySubnet;
 GRANT AUTHENTICATION v_ldap TO jsmith;
 GRANT CREATE ON DATABASE DEFAULT TO Fred;
 REVOKE AUTHENTICATION v_ldap FROM jsmith;
 REVOKE CREATE ON DATABASE DEFAULT FROM Fred;
 REVOKE pseudosuperuser from dbadmin;
 SELECT slice_time + 4 from tempTable;
 SET ESCAPE_STRING_WARNING TO OFF;
 SET SESSION RUNTIMECAP '10 minutes';
 SET STANDARD_CONFORMING_STRINGS TO OFF;
 SELECT SET_CONFIG_PARAMETER ('AnalyzeRowCountInterval',3600);
SELECT ANALYZE_STATISTICS('public.table.column');
 SELECT SUM(metadata_reads) FROM UDFS_STATISTICS WHERE filesystem = 'Libhdfs++';

 
 COMMIT;
 INSERT INTO t values(HEX_TO_BINARY('0xF00F'));
 INSERT INTO t values(HEX_TO_BINARY('0xF00F'));
 INSERT INTO t values(HEX_TO_BINARY('0xF00F'));
 SELECT a,b,COUNT(*), GROUPING_ID() FROM T GROUP BY ROLLUP(a,b);
SELECT product_description, product_cost, WIDTH_BUCKET(product_cost, 100, 700, 3);
INSERT INTO t VALUES('2010-09-04 09:14:00-04');
 SELECT ADVANCE_EPOCH(1);
 SELECT ALTER_LOCATION_USE ('/thirdVerticaStorageLocation/' , '' , 'DATA');
 SELECT CHANGE_RUNTIME_PRIORITY(45035996273705748, NULL, 'low');
 SELECT CLEAR_PROFILING('query');
 SELECT close_user_sessions('u1');
 SELECT DESIGNER_DROP_DESIGN ('VMART_DESIGN', 'true');
 SELECT DESIGNER_DESIGN_PROJECTION_ENCODINGS ('mydb.private.*','encodings.sql');
 SELECT DESIGNER_DROP_DESIGN ('VMART_DESIGN');
 SELECT DESIGNER_RESET_DESIGN ('VMART_DESIGN');
 SELECT DESIGNER_SET_DESIGN_KSAFETY('VMART_DESIGN', 1);
 SELECT DESIGNER_SET_PROPOSE_UNSEGMENTED_PROJECTIONS('VMART_DESIGN', false);
 SELECT DESIGNER_WAIT_FOR_DESIGN ('VMART_DESIGN');
 SELECT DROP_LOCATION('/data', 'v_vmart_node0003');
 SELECT DUMP_CATALOG();
 SELECT DUMP_LOCKTABLE();
 SELECT ENFORCE_OBJECT_STORAGE_POLICY ('test');
 SELECT SYNC_CATALOG();
 SELECT EXTERNAL_CONFIG_CHECK('nameservice=ns1');
 SELECT HAS_ROLE('commentor');
 SELECT ldap_link_sync_start();
 SELECT DROP_LICENSE('9b2d81e2-aab1-4cfb-bc07-fa9a696e8f5e');
 SELECT INSTALL_LICENSE('/tmp/vlicense.dat');
 SELECT MOVE_STATEMENT_TO_RESOURCE_POOL ('v_vmart_node0001.example.-31427:0x82fbm', 45035996273711993, 1, 'my_target_pool');
 SELECT NOTIFY('ETL Done!', 'my_notifier', 'DB_activity_topic');
 SELECT REALIGN_CONTROL_NODES;
SELECT REFRESH_COLUMNS ('t1, t2', 't1.a, t2.b', 'REBUILD');
 SELECT RESTORE_LOCATION ('/thirdVerticaStorageLocation/' , 'v_vmartdb_node0004');
 SELECT RETIRE_LOCATION ('/data' , 'v_vmartdb_node0004');
 SELECT SET_LOCATION_PERFORMANCE('/secondVerticaStorageLocation/','node2','122','140');
 SELECT x, y WHERE x <> 0 AND y/x > 1.5;
SELECT /*+ SYNTACTIC_JOIN*/ * FROM x JOIN /*+JTYPE(FM)*/ y ON x.c1 = y.c1;
CREATE SEQUENCE "my sequence!";
 SELECT my_node AS SOURCE FROM nodes;
 CREATE TABLE int_test(i INTERVAL YEAR TO MONTH);
ALTER SESSION SET EnableStrictTimeCasts=1;
 COMMIT;
 ALTER ACCESS POLICY ON customer_dimension FOR COLUMN customer_key length('xxxxx') enable;
 ALTER AUTHENTICATION v_ldap ENABLE;
 ALTER HCATALOG SCHEMA hcat SET HOSTNAME='thrift://ms1.example.com:9083,thrift://ms2.example.com:9083';
 ALTER NETWORK INTERFACE myNetwork RENAME TO myNewNetwork;
 ALTER NODE v_vmart_node0001 EXPORT ON DEFAULT;
ALTER PROFILE DEFAULT LIMIT PASSWORD_MIN_SYMBOLS 1;
ALTER PROFILE sample_profile RENAME TO new_sample_profile;
 ALTER RESOURCE POOL ceo_pool PRIORITY 5;
 ALTER SESSION SET UDPARAMETER FOR securelib username='alice';
 ALTER SUBNET mysubnet RENAME TO myNewSubnet;
 ALTER USER user1 IDENTIFIED BY 'newpassword';
 SELECT * FROM customer_dimension ORDER BY customer_state;
 COMMENT ON NODE initiator IS 'Initiator node';
 COMMENT ON SCHEMA public  IS 'All users can access this schema';
 COMMIT;
 COPY t FROM 's3://AWS_DataLake/sales.parquet' ORC;
 COPY t FROM 's3://AWS_DataLake/sales.parquet' PARQUET;
 CREATE HCATALOG SCHEMA hcat;
 CREATE NETWORK INTERFACE mynetwork ON v_vmart_node0001 WITH '123.4.5.6';
 CREATE PROFILE sample_profile LIMIT PASSWORD_MAX_LENGTH 20;
 CREATE SCHEMA s1;
 CREATE SUBNET mySubnet WITH '123.4.5.6';
 CREATE TRANSFORM FUNCTION transFunct AS LANGUAGE 'C++' NAME 'myFactory' LIBRARY myFunction;
 GRANT USAGE ON SCHEMA PUBLIC to Fred;
 CREATE NETWORK ADDRESS node03 ON v_vmart_br_node0003 WITH '10.20.100.64';
 DROP AUTHENTICATION md5_auth;
 DROP NETWORK INTERFACE myNetwork;
 DROP PROFILE sample_profile;
 DROP RESOURCE POOL rp2;
 DROP SCHEMA S1;
 DROP SUBNET mySubnet;
 GRANT AUTHENTICATION v_ldap TO jsmith;
 GRANT CREATE ON DATABASE DEFAULT TO Fred;
 COMMIT;
 REVOKE AUTHENTICATION v_ldap FROM jsmith;
 REVOKE CREATE ON DATABASE DEFAULT FROM Fred;
 REVOKE pseudosuperuser from dbadmin;
 COMMIT;
 COMMIT;
 SELECT slice_time + 3;
 SET ESCAPE_STRING_WARNING TO OFF;
 SET SESSION RUNTIMECAP '10 minutes';
 SET STANDARD_CONFORMING_STRINGS TO OFF;
 SET TIME ZONE TO INTERVAL '-08:00 HOURS';
 SELECT SET_CONFIG_PARAMETER ('AnalyzeRowCountInterval',3600);

SELECT ANALYZE_STATISTICS('public.table.column');
 SELECT SUM(metadata_reads) FROM UDFS_STATISTICS WHERE filesystem = 'Libhdfs++';
